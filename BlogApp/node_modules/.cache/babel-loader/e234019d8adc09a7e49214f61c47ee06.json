{"ast":null,"code":"import * as types from \"./actionTypes\";\nimport { take, takeEvery, takeLatest, put, all, delay, fork, call } from \"redux-saga/effects\";\nimport { loadUsersSuccess, loadUsersError, createUserSuccess, createUserError, deleteUserSuccess, deleteUserError, updateUserSuccess, updateUserError } from \"./actions\";\nimport { loadUsersApi, createUserApi, deleteUserApi, updateUserApi } from \"./api\";\nfunction* onLoadUsersStartAsync() {\n  try {\n    const response = yield call(loadUsersApi);\n    if (response.status === 200) {\n      yield delay(500);\n      yield put(loadUsersSuccess(response.data));\n    }\n  } catch (error) {\n    yield put(loadUsersError(error.response.data));\n  }\n}\nfunction* onCreateUserStartAsync(_ref) {\n  let {\n    payload\n  } = _ref;\n  try {\n    const response = yield call(createUserApi, payload);\n    if (response.status === 200) {\n      yield put(createUserSuccess(response.data));\n    }\n  } catch (error) {\n    yield put(createUserError(error.response.data));\n  }\n}\nfunction* onDeleteUserStartAsync(userId) {\n  try {\n    const response = yield call(deleteUserApi, userId);\n    if (response.status === 200) {\n      yield delay(500);\n      yield put(deleteUserSuccess(userId));\n    }\n  } catch (error) {\n    yield put(deleteUserError(error.response.data));\n  }\n}\nfunction* onUpdateUserStartAsync(_ref2) {\n  let {\n    payload: {\n      id,\n      formValue\n    }\n  } = _ref2;\n  try {\n    const response = yield call(updateUserApi, id, formValue);\n    if (response.status === 200) {\n      // yield delay(500);\n      yield put(updateUserSuccess());\n    }\n  } catch (error) {\n    yield put(updateUserError(error.response.data));\n  }\n}\nfunction* onDeleteUser() {\n  while (true) {\n    const {\n      payload: userId\n    } = yield take(types.DELETE_USER_START);\n    yield call(onDeleteUserStartAsync, userId);\n  }\n}\nfunction* onLoadUsers() {\n  yield takeEvery(types.LOAD_USERS_START, onLoadUsersStartAsync);\n}\nfunction* onCreateUser() {\n  yield takeLatest(types.CREATE_USER_START, onCreateUserStartAsync);\n}\nfunction* onUpdateUser() {\n  yield takeLatest(types.UPDATE_USER_START, onUpdateUserStartAsync);\n}\nconst userSagas = [fork(onLoadUsers), fork(onCreateUser), fork(onDeleteUser), fork(onUpdateUser)];\nexport default function* rootSaga() {\n  yield all([...userSagas]);\n}","map":{"version":3,"names":["types","take","takeEvery","takeLatest","put","all","delay","fork","call","loadUsersSuccess","loadUsersError","createUserSuccess","createUserError","deleteUserSuccess","deleteUserError","updateUserSuccess","updateUserError","loadUsersApi","createUserApi","deleteUserApi","updateUserApi","onLoadUsersStartAsync","response","status","data","error","onCreateUserStartAsync","payload","onDeleteUserStartAsync","userId","onUpdateUserStartAsync","id","formValue","onDeleteUser","DELETE_USER_START","onLoadUsers","LOAD_USERS_START","onCreateUser","CREATE_USER_START","onUpdateUser","UPDATE_USER_START","userSagas","rootSaga"],"sources":["D:/Assignment/1-Git/shyam-sharma/React_Assignment/src/redux/usersagas.js"],"sourcesContent":["import * as types from \"./actionTypes\";\r\nimport {\r\n    take,\r\n    takeEvery,\r\n    takeLatest,\r\n    put,\r\n    all,\r\n    delay,\r\n    fork,\r\n    call\r\n    } from \"redux-saga/effects\";\r\n\r\n    import {loadUsersSuccess, loadUsersError, createUserSuccess, createUserError, deleteUserSuccess, deleteUserError, updateUserSuccess,updateUserError} from \"./actions\";\r\n     import {loadUsersApi, createUserApi, deleteUserApi, updateUserApi} from \"./api\";\r\n      function* onLoadUsersStartAsync(){\r\n        try{\r\n            const response=yield call(loadUsersApi);\r\n            if(response.status === 200){\r\n                yield delay(500);\r\n                yield put(loadUsersSuccess(response.data))\r\n            }\r\n        }catch(error){\r\n            yield put(loadUsersError(error.response.data));\r\n        }\r\n\r\n     }\r\n      function* onCreateUserStartAsync({payload}){\r\n        try{\r\n            const response=yield call(createUserApi, payload);\r\n            if(response.status === 200){\r\n                yield put(createUserSuccess(response.data))\r\n            }\r\n        }catch(error){\r\n            yield put(createUserError(error.response.data));\r\n        }\r\n\r\n     }\r\n     function* onDeleteUserStartAsync(userId){\r\n        try{\r\n            const response=yield call(deleteUserApi,userId);\r\n            if(response.status === 200){\r\n                yield delay(500);\r\n                yield put(deleteUserSuccess(userId))\r\n            }\r\n        }catch(error){\r\n            yield put(deleteUserError(error.response.data));\r\n        }\r\n\r\n\r\n     }\r\n      function* onUpdateUserStartAsync({payload:{id, formValue}}){\r\n        try{\r\n        const response= yield call(updateUserApi, id, formValue);  \r\n        if(response.status === 200){\r\n            // yield delay(500);\r\n            yield put(updateUserSuccess());\r\n        }       \r\n            \r\n        }catch(error){\r\n            yield put(updateUserError(error.response.data));\r\n\r\n\r\n        }\r\n\r\n      }\r\n\r\n     function *onDeleteUser(){\r\n        while(true){\r\n            const {payload:userId}= yield take(types.DELETE_USER_START);\r\n            yield call(onDeleteUserStartAsync,userId)\r\n        }\r\n     }\r\n\r\n      function* onLoadUsers(){\r\n        yield takeEvery(types.LOAD_USERS_START, onLoadUsersStartAsync);\r\n     }\r\n      function* onCreateUser(){\r\n        yield takeLatest(types.CREATE_USER_START, onCreateUserStartAsync);\r\n     }\r\n     function* onUpdateUser(){\r\n        yield takeLatest(types.UPDATE_USER_START, onUpdateUserStartAsync);\r\n     }\r\n\r\nconst userSagas=[\r\n\r\n    fork(onLoadUsers),fork(onCreateUser), fork(onDeleteUser), fork(onUpdateUser)\r\n];\r\nexport default function* rootSaga(){\r\n    yield all([...userSagas]);\r\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,eAAe;AACtC,SACIC,IAAI,EACJC,SAAS,EACTC,UAAU,EACVC,GAAG,EACHC,GAAG,EACHC,KAAK,EACLC,IAAI,EACJC,IAAI,QACG,oBAAoB;AAE3B,SAAQC,gBAAgB,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,eAAe,EAAEC,iBAAiB,EAAEC,eAAe,EAAEC,iBAAiB,EAACC,eAAe,QAAO,WAAW;AACpK,SAAQC,YAAY,EAAEC,aAAa,EAAEC,aAAa,EAAEC,aAAa,QAAO,OAAO;AAC9E,UAAUC,qBAAqB,GAAE;EAC/B,IAAG;IACC,MAAMC,QAAQ,GAAC,MAAMd,IAAI,CAACS,YAAY,CAAC;IACvC,IAAGK,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;MACvB,MAAMjB,KAAK,CAAC,GAAG,CAAC;MAChB,MAAMF,GAAG,CAACK,gBAAgB,CAACa,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC9C;EACJ,CAAC,QAAMC,KAAK,EAAC;IACT,MAAMrB,GAAG,CAACM,cAAc,CAACe,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClD;AAEH;AACC,UAAUE,sBAAsB,OAAW;EAAA,IAAV;IAACC;EAAO,CAAC;EACxC,IAAG;IACC,MAAML,QAAQ,GAAC,MAAMd,IAAI,CAACU,aAAa,EAAES,OAAO,CAAC;IACjD,IAAGL,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;MACvB,MAAMnB,GAAG,CAACO,iBAAiB,CAACW,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC/C;EACJ,CAAC,QAAMC,KAAK,EAAC;IACT,MAAMrB,GAAG,CAACQ,eAAe,CAACa,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC,CAAC;EACnD;AAEH;AACA,UAAUI,sBAAsB,CAACC,MAAM,EAAC;EACrC,IAAG;IACC,MAAMP,QAAQ,GAAC,MAAMd,IAAI,CAACW,aAAa,EAACU,MAAM,CAAC;IAC/C,IAAGP,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;MACvB,MAAMjB,KAAK,CAAC,GAAG,CAAC;MAChB,MAAMF,GAAG,CAACS,iBAAiB,CAACgB,MAAM,CAAC,CAAC;IACxC;EACJ,CAAC,QAAMJ,KAAK,EAAC;IACT,MAAMrB,GAAG,CAACU,eAAe,CAACW,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC,CAAC;EACnD;AAGH;AACC,UAAUM,sBAAsB,QAA2B;EAAA,IAA1B;IAACH,OAAO,EAAC;MAACI,EAAE;MAAEC;IAAS;EAAC,CAAC;EACxD,IAAG;IACH,MAAMV,QAAQ,GAAE,MAAMd,IAAI,CAACY,aAAa,EAAEW,EAAE,EAAEC,SAAS,CAAC;IACxD,IAAGV,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;MACvB;MACA,MAAMnB,GAAG,CAACW,iBAAiB,EAAE,CAAC;IAClC;EAEA,CAAC,QAAMU,KAAK,EAAC;IACT,MAAMrB,GAAG,CAACY,eAAe,CAACS,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC,CAAC;EAGnD;AAEF;AAED,UAAUS,YAAY,GAAE;EACrB,OAAM,IAAI,EAAC;IACP,MAAM;MAACN,OAAO,EAACE;IAAM,CAAC,GAAE,MAAM5B,IAAI,CAACD,KAAK,CAACkC,iBAAiB,CAAC;IAC3D,MAAM1B,IAAI,CAACoB,sBAAsB,EAACC,MAAM,CAAC;EAC7C;AACH;AAEC,UAAUM,WAAW,GAAE;EACrB,MAAMjC,SAAS,CAACF,KAAK,CAACoC,gBAAgB,EAAEf,qBAAqB,CAAC;AACjE;AACC,UAAUgB,YAAY,GAAE;EACtB,MAAMlC,UAAU,CAACH,KAAK,CAACsC,iBAAiB,EAAEZ,sBAAsB,CAAC;AACpE;AACA,UAAUa,YAAY,GAAE;EACrB,MAAMpC,UAAU,CAACH,KAAK,CAACwC,iBAAiB,EAAEV,sBAAsB,CAAC;AACpE;AAEL,MAAMW,SAAS,GAAC,CAEZlC,IAAI,CAAC4B,WAAW,CAAC,EAAC5B,IAAI,CAAC8B,YAAY,CAAC,EAAE9B,IAAI,CAAC0B,YAAY,CAAC,EAAE1B,IAAI,CAACgC,YAAY,CAAC,CAC/E;AACD,eAAe,UAAUG,QAAQ,GAAE;EAC/B,MAAMrC,GAAG,CAAC,CAAC,GAAGoC,SAAS,CAAC,CAAC;AAC7B"},"metadata":{},"sourceType":"module"}