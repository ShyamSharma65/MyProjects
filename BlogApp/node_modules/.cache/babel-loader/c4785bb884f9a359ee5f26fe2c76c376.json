{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./usersagas\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"names":["applyMiddleware","createStore","createSagaMiddleware","logger","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run"],"sources":["D:/Assignment/1-Git/shyam-sharma/React_Assignment/src/redux/store.js"],"sourcesContent":["import { applyMiddleware, createStore  } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport logger from \"redux-logger\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nimport rootSaga from \"./usersagas\";\r\n\r\nconst sagaMiddleware=createSagaMiddleware();\r\n\r\nconst middlewares=[sagaMiddleware];\r\nif(process.env.NODE_ENV === \"development\"){\r\n    middlewares.push(logger)\r\n}\r\n\r\nconst store=createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,eAAe,EAAEC,WAAW,QAAS,OAAO;AACrD,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,MAAM,MAAM,cAAc;AAEjC,OAAOC,WAAW,MAAM,eAAe;AAEvC,OAAOC,QAAQ,MAAM,aAAa;AAElC,MAAMC,cAAc,GAACJ,oBAAoB,EAAE;AAE3C,MAAMK,WAAW,GAAC,CAACD,cAAc,CAAC;AAClC,IAAGE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAC;EACtCH,WAAW,CAACI,IAAI,CAACR,MAAM,CAAC;AAC5B;AAEA,MAAMS,KAAK,GAACX,WAAW,CAACG,WAAW,EAAEJ,eAAe,CAAC,GAAGO,WAAW,CAAC,CAAC;AAErED,cAAc,CAACO,GAAG,CAACR,QAAQ,CAAC;AAE5B,eAAeO,KAAK"},"metadata":{},"sourceType":"module"}